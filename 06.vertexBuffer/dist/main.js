(()=>{"use strict";class e{constructor(e,t){const r=e.createBindGroupLayout({entries:[]});this.bindGroup=e.createBindGroup({layout:r,entries:[]});const n=e.createPipelineLayout({bindGroupLayouts:[r]}),o=e.createShaderModule({code:"struct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) Color : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) vertexPosition: vec2<f32>, @location(1) vertexColor: vec3<f32> ) -> Output {\r\n\r\n\r\n\r\n    var output : Output;\r\n    output.Position = vec4<f32>(vertexPosition, 0.0, 1.0);\r\n    output.Color = vec4<f32>(vertexColor, 1.0);\r\n\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return Color;\r\n}"});this.pipeline=e.createRenderPipeline({vertex:{module:o,entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x3",offset:8}]}]},fragment:{module:o,entryPoint:"fs_main",targets:[{format:t}]},primitive:{topology:"triangle-list"},layout:n})}}class t{constructor(e,t){const r=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,n={size:t.byteLength,usage:r,mappedAtCreation:!0};this.buffer=e.createBuffer(n),new Uint16Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap()}}class r{constructor(e,t){const r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,n={size:t.byteLength,usage:r,mappedAtCreation:!0};this.buffer=e.createBuffer(n),new Float32Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap()}}class n{constructor(e){this.indexFormat="uint16";const n=new Float32Array([-.5,.5,1,0,0,-.5,-.5,0,1,0,.5,.5,0,0,1,.5,-.5,1,0,0]);this.vertexBuffer=new r(e,n);const o=new Uint16Array([0,1,2,2,1,3]);this.indexCount=o.length,this.indexBuffer=new t(e,o)}getVertexBuffer(){return this.vertexBuffer.buffer}getIndexBuffer(){return this.indexBuffer.buffer}}var o,i;i=function*(){var t;const r=document.getElementById("gfx-main"),o=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),i=yield null==o?void 0:o.requestDevice(),u=r.getContext("webgpu"),a="bgra8unorm";u.configure({device:i,format:a,alphaMode:"opaque"});const f=new n(i),s=new e(i,a),c=i.createCommandEncoder(),l={view:u.getCurrentTexture().createView(),clearValue:[.5,0,.25,1],loadOp:"clear",storeOp:"store"},d=c.beginRenderPass({colorAttachments:[l]});d.setPipeline(s.pipeline),d.setBindGroup(0,s.bindGroup),d.setVertexBuffer(0,f.getVertexBuffer()),d.setIndexBuffer(f.getIndexBuffer(),f.indexFormat),d.drawIndexed(f.indexCount),d.end(),i.queue.submit([c.finish()])},new((o=void 0)||(o=Promise))((function(e,t){function r(e){try{u(i.next(e))}catch(e){t(e)}}function n(e){try{u(i.throw(e))}catch(e){t(e)}}function u(t){var i;t.done?e(t.value):(i=t.value,i instanceof o?i:new o((function(e){e(i)}))).then(r,n)}u((i=i.apply(void 0,[])).next())}))})();