(()=>{"use strict";class e{constructor(e,t){const r=e.createBindGroupLayout({entries:[]});this.bindGroup=e.createBindGroup({layout:r,entries:[]});const n=e.createPipelineLayout({bindGroupLayouts:[r]}),o=e.createShaderModule({code:"struct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) Color : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) vertexPosition: vec2<f32>, @location(1) vertexColor: vec3<f32> ) -> Output {\r\n\r\n\r\n\r\n    var output : Output;\r\n    output.Position = vec4<f32>(vertexPosition, 0.0, 1.0);\r\n    output.Color = vec4<f32>(vertexColor, 1.0);\r\n\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return Color;\r\n}"});this.pipeline=e.createRenderPipeline({vertex:{module:o,entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x3",offset:8}]}]},fragment:{module:o,entryPoint:"fs_main",targets:[{format:t}]},primitive:{topology:"triangle-list"},layout:n})}}class t{constructor(e,t){const r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,n={size:t.byteLength,usage:r,mappedAtCreation:!0};this.buffer=e.createBuffer(n),new Float32Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap()}}class r{constructor(e){const r=new Float32Array([-.5,.5,1,0,0,-.5,-.5,0,1,0,.5,.5,0,0,1,.5,.5,0,0,1,-.5,-.5,0,0,1,.5,-.5,0,0,1]);this.v_Buffer=new t(e,r)}GPUBuffer(){return this.v_Buffer.buffer}}var n,o;o=function*(){var t;const n=document.getElementById("gfx-main"),o=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),i=yield null==o?void 0:o.requestDevice(),a=n.getContext("webgpu"),u="bgra8unorm";a.configure({device:i,format:u,alphaMode:"opaque"});const s=new r(i),c=new e(i,u),f=i.createCommandEncoder(),l=a.getCurrentTexture().createView(),p=f.beginRenderPass({colorAttachments:[{view:l,clearValue:[.5,0,.25,1],loadOp:"clear",storeOp:"store"}]});p.setPipeline(c.pipeline),p.setBindGroup(0,c.bindGroup),p.setVertexBuffer(0,s.GPUBuffer()),p.draw(6,2,0,0),p.end(),i.queue.submit([f.finish()])},new((n=void 0)||(n=Promise))((function(e,t){function r(e){try{a(o.next(e))}catch(e){t(e)}}function i(e){try{a(o.throw(e))}catch(e){t(e)}}function a(t){var o;t.done?e(t.value):(o=t.value,o instanceof n?o:new n((function(e){e(o)}))).then(r,i)}a((o=o.apply(void 0,[])).next())}))})();