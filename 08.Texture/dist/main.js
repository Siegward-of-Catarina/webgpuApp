(()=>{"use strict";class t{constructor(t,e){const i=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,r={size:e.byteLength,usage:i,mappedAtCreation:!0};this.buffer=t.createBuffer(r),new Uint32Array(this.buffer.getMappedRange()).set(e),this.buffer.unmap()}}class e{constructor(t,e){const i=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r={size:e.byteLength,usage:i,mappedAtCreation:!0};this.buffer=t.createBuffer(r),new Float32Array(this.buffer.getMappedRange()).set(e),this.buffer.unmap()}}const i=t=>{if(null===t)throw Error(t+"is null")};class r{constructor(){this._vertexBuffer=null,this._indexBuffer=null,this._indexCount=null,this._indexFormat="uint32"}get vertexBuffer(){return i(this._vertexBuffer),this._vertexBuffer.buffer}get indexBuffer(){return i(this._indexBuffer),this._indexBuffer.buffer}get indexCount(){return i(this._indexCount),this._indexCount}get indexFormat(){return this._indexFormat}}class n extends r{constructor(i,r,n){super();const s=new Float32Array([-.5,.5,0,r[0],r[1],-.5,-.5,0,r[0],r[1]+n[1],.5,.5,0,r[0]+n[0],r[1],.5,-.5,0,r[0]+n[0],r[1]+n[1]]);this._vertexBuffer=new e(i,s);const a=new Uint32Array([0,1,2,2,1,3]);this._indexCount=a.length,this._indexBuffer=new t(i,a)}}class s{constructor(){this._module=null,this._bufferLayout=null,this._entryPoint={Vertex:"vs_main",Fragment:"fs_main"}}get module(){return i(this._module),this._module}get bufferLayout(){return i(this._bufferLayout),this._bufferLayout}get entryPoint(){return this._entryPoint}}class a extends s{constructor(t){super(),this._module=t.createShaderModule({code:"struct TransformData{\r\n  model: mat4x4<f32>,\r\n  view: mat4x4<f32>,\r\n  projection: mat4x4<f32>\r\n};\r\n\r\n@binding(0) @group(0) var <uniform> transformUBO : TransformData;\r\n@binding(1) @group(0) var myTextyre: texture_2d<f32>;\r\n@binding(2) @group(0) var mySampler: sampler;\r\n\r\nstruct Output {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) TexCoord : vec2<f32>,\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) vertexPosition: vec3<f32>, @location(1) vertexTexCoord: vec2<f32> ) -> Output {\r\n\r\n\r\n\r\n    var output : Output;\r\n    var mvpMat = transformUBO.projection * transformUBO.view * transformUBO.model;\r\n    output.Position = mvpMat * vec4<f32>(vertexPosition, 1.0);\r\n    output.TexCoord = vertexTexCoord;\r\n\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) TexCoord: vec2<f32>) -> @location(0) vec4<f32> {\r\n    return textureSample(myTextyre, mySampler, TexCoord);\r\n}"}),this._bufferLayout={arrayStride:20,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x2",offset:12}]}}}var o=1e-6,u="undefined"!=typeof Float32Array?Float32Array:Array;function h(){var t=new u(16);return u!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});class c{constructor(){this.texture=null,this.view=null,this.sampler=null}createTexture(t,e){const r={size:{width:e.width,height:e.height},format:"bgra8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT};this.texture=t.createTexture(r),i(this.texture),t.queue.copyExternalImageToTexture({source:e},{texture:this.texture},r.size),this.creaateViewAndSampler(t)}creaateViewAndSampler(t){this.view=this.texture.createView({format:"bgra8unorm",dimension:"2d",aspect:"all",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:0,arrayLayerCount:1}),this.sampler=t.createSampler({addressModeU:"repeat",addressModeW:"repeat",magFilter:"linear",minFilter:"nearest",mipmapFilter:"nearest",maxAnisotropy:1})}}class f{constructor(){this._data=null}loadImage(t){return e=this,i=void 0,n=function*(){const e=yield fetch(t),i=yield e.blob();this._data=yield createImageBitmap(i)},new((r=void 0)||(r=Promise))((function(t,s){function a(t){try{u(n.next(t))}catch(t){s(t)}}function o(t){try{u(n.throw(t))}catch(t){s(t)}}function u(e){var i;e.done?t(e.value):(i=e.value,i instanceof r?i:new r((function(t){t(i)}))).then(a,o)}u((n=n.apply(e,i||[])).next())}));var e,i,r,n}get data(){return this._data}}class l extends f{constructor(t){super(),this.chipSize=t}}class d{constructor(t,e,i,r){this.count=0,this.texture=new c,this.image=new l(t),this.num=e,this.range=[i,r],this.Plate=Array(this.num),this.playTime=Array(this.num),this._currentNumber=0,this._animSpeed=1,this._animTime=0,this._totalTime=0}createSprites(t,e,i){return r=this,s=void 0,o=function*(){yield this.image.loadImage(e),this.texture.createTexture(t,this.image.data);const r=this.range[0],s=this.range[1];for(var a=this.image.chipSize,o=0,u=0;u<s;u++)for(var h=0;h<r&&!(o>=this.num);h++){var c=[i[0]*a[0],i[1]*a[1]],f=[a[0]*h+c[0],a[1]*u+c[1]];this.Plate[h+r*u]=new n(t,f,[a[0],a[1]]),this.playTime[o]=20,this._totalTime+=this.playTime[o],this.playTime[o]=this._totalTime,++o}},new((a=void 0)||(a=Promise))((function(t,e){function i(t){try{u(o.next(t))}catch(t){e(t)}}function n(t){try{u(o.throw(t))}catch(t){e(t)}}function u(e){var r;e.done?t(e.value):(r=e.value,r instanceof a?r:new a((function(t){t(r)}))).then(i,n)}u((o=o.apply(r,s||[])).next())}));var r,s,a,o}animStart(t){if(this._animTime+=t*this._animSpeed,this._animTime>=this._totalTime){var e=Math.floor(this._animTime/this._totalTime);return this._animTime=this._animTime-e*this._totalTime,this._currentNumber=0,!0}var i;for(i=this._currentNumber;i<this.num&&!(this._animTime<this.playTime[i]);i++);this._currentNumber=i}get currentBuffer(){return this.Plate[this._currentNumber].vertexBuffer}}var m=function(t,e,i,r){return new(i||(i=Promise))((function(n,s){function a(t){try{u(r.next(t))}catch(t){s(t)}}function o(t){try{u(r.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,o)}u((r=r.apply(t,e||[])).next())}))};class p{constructor(t){this.render=()=>{const t=h(),e=this.canvas.width/this.canvas.height;!function(t,e,i,r,n){var s,a=1/Math.tan(e/2);t[0]=a/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=n&&n!==1/0?(s=1/(r-n),t[10]=(n+r)*s,t[14]=2*n*r*s):(t[10]=-1,t[14]=-2*r)}(t,Math.PI/4,e,.1,10);const i=h();var r,n,s,a,u,c,f,l,d,m,p,v,x,y,g,_,b,T,w,B,P,U,M;r=i,g=(n=[0,1,-2])[0],_=n[1],b=n[2],T=(a=[0,1,0])[0],w=a[1],B=a[2],P=(s=[0,0,0])[0],U=s[1],M=s[2],Math.abs(g-P)<o&&Math.abs(_-U)<o&&Math.abs(b-M)<o?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(r):(p=g-P,v=_-U,x=b-M,u=w*(x*=y=1/Math.hypot(p,v,x))-B*(v*=y),c=B*(p*=y)-T*x,f=T*v-w*p,(y=Math.hypot(u,c,f))?(u*=y=1/y,c*=y,f*=y):(u=0,c=0,f=0),l=v*f-x*c,d=x*u-p*f,m=p*c-v*u,(y=Math.hypot(l,d,m))?(l*=y=1/y,d*=y,m*=y):(l=0,d=0,m=0),r[0]=u,r[1]=l,r[2]=p,r[3]=0,r[4]=c,r[5]=d,r[6]=v,r[7]=0,r[8]=f,r[9]=m,r[10]=x,r[11]=0,r[12]=-(u*g+c*_+f*b),r[13]=-(l*g+d*_+m*b),r[14]=-(p*g+v*_+x*b),r[15]=1);const A=h();Math.sin(this.time/1.9),this.device.queue.writeBuffer(this.uniformBuffer,0,A),this.device.queue.writeBuffer(this.uniformBuffer,64,i),this.device.queue.writeBuffer(this.uniformBuffer,128,t);const S=this.device.createCommandEncoder(),C={colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:[.5,0,.25,1],loadOp:"clear",storeOp:"store"}]},G=S.beginRenderPass(C);G.setPipeline(this.pipeline),G.setBindGroup(0,this.bindGroup),this.sprites.animStart(this.deltaTime),G.setVertexBuffer(0,this.sprites.currentBuffer),G.setIndexBuffer(this.mesh.indexBuffer,this.mesh.indexFormat),G.drawIndexed(this.mesh.indexCount),G.end(),this.device.queue.submit([S.finish()]);var F=Date.now();F-this.lastLoop<100&&(this.deltaTime=F-this.lastLoop),this.lastLoop=F,this.time+=.001*this.deltaTime,this.time,Math.PI,requestAnimationFrame(this.render)},this.canvas=t,this.adapter=null,this.device=null,this.context=null,this.format=null,this.uniformBuffer=null,this.bindGroup=null,this.pipeline=null,this.mesh=null,this.mesh2=null,this.sprites=null,this.material=null,this.shader=null,this.time=0,this.lastLoop=Date.now(),this.deltaTime=0,this.frame=0,this.numImage=4,this.imageData=new Array(4)}Initialize(){return m(this,void 0,void 0,(function*(){yield this.setupDevice(),yield this.createAssets(),yield this.makePipeline(),this.render()}))}setupDevice(){var t;return m(this,void 0,void 0,(function*(){this.adapter=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),i(this.adapter),this.device=yield this.adapter.requestDevice(),i(this.device),this.context=this.canvas.getContext("webgpu"),i(this.context),this.format="bgra8unorm",this.context.configure({device:this.device,format:this.format,alphaMode:"opaque"})}))}createAssets(){return m(this,void 0,void 0,(function*(){const t=.25;this.mesh=new n(this.device,[0,0],[t,t]),this.mesh2=new n(this.device,[t,0],[t,t]),this.sprites=new d([.0625,.0625],256,16,16),yield this.sprites.createSprites(this.device,"dist/img/ears.png",[0,0]),this.shader=new a(this.device)}))}makePipeline(){return m(this,void 0,void 0,(function*(){this.uniformBuffer=this.device.createBuffer({size:192,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const t=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]});this.bindGroup=this.device.createBindGroup({layout:t,entries:[{binding:0,resource:{buffer:this.uniformBuffer}},{binding:1,resource:this.sprites.texture.view},{binding:2,resource:this.sprites.texture.sampler}]}),i(this.bindGroup);const e=this.device.createPipelineLayout({bindGroupLayouts:[t]});this.pipeline=this.device.createRenderPipeline({vertex:{module:this.shader.module,entryPoint:this.shader.entryPoint.Vertex,buffers:[this.shader.bufferLayout]},fragment:{module:this.shader.module,entryPoint:this.shader.entryPoint.Fragment,targets:[{format:this.format,blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"},alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"}}}]},primitive:{topology:"triangle-list"},layout:e}),i(this.pipeline)}))}}!function(){var t,e,i,r;t=this,e=void 0,r=function*(){const t=yield document.getElementById("gfx-main"),e=new p(t);yield e.Initialize()},new((i=void 0)||(i=Promise))((function(n,s){function a(t){try{u(r.next(t))}catch(t){s(t)}}function o(t){try{u(r.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,o)}u((r=r.apply(t,e||[])).next())}))}()})();